{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tomasmaritano/Documents/portfolio/grandvalira-directorio/app/src/app/hooks/useApi.js"],"sourcesContent":["'use client';\n\nimport { useAuth } from '../context/AuthContext';\n\nexport const useApi = () => {\n  const { token } = useAuth();\n\n  const get = async (url) => {\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    const data = await response.json();\n    return { data, ok: response.ok };\n  };\n\n  const post = async (url, body) => {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n    return { data, ok: response.ok };\n  };\n\n  return { get, post };\n};"],"names":[],"mappings":";;;AAEA;;AAFA;;AAIO,MAAM,SAAS;;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,UAAO,AAAD;IAExB,MAAM,MAAM,OAAO;QACjB,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;YACpC;QACF;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;YAAE;YAAM,IAAI,SAAS,EAAE;QAAC;IACjC;IAEA,MAAM,OAAO,OAAO,KAAK;QACvB,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,iBAAiB,CAAC,OAAO,EAAE,OAAO;YACpC;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;YAAE;YAAM,IAAI,SAAS,EAAE;QAAC;IACjC;IAEA,OAAO;QAAE;QAAK;IAAK;AACrB;GA7Ba;;QACO,wIAAA,CAAA,UAAO","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/tomasmaritano/Documents/portfolio/grandvalira-directorio/app/src/app/contacts/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useApi } from '@/app/hooks/useApi';\n\nexport default function ContactsPage() {\n  const { get } = useApi();\n  type Contact = { id: string | number; name: string; email: string };\n  const [contacts, setContacts] = useState<Contact[]>([]);\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      const { data, ok } = await get('http://localhost:3000/contacts');\n\n      if (ok) {\n        setContacts(data);\n      } else {\n        console.error('Failed to fetch contacts');\n      }\n    };\n\n    fetchContacts();\n  }, [get]);\n\n  return (\n    <div>\n      <h1>Contacts</h1>\n      <ul>\n        {contacts.map((contact) => (\n          <li key={contact.id}>{contact.name} - {contact.email}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,SAAM,AAAD;IAErB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAEtD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM;wDAAgB;oBACpB,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,MAAM,IAAI;oBAE/B,IAAI,IAAI;wBACN,YAAY;oBACd,OAAO;wBACL,QAAQ,KAAK,CAAC;oBAChB;gBACF;;YAEA;QACF;iCAAG;QAAC;KAAI;IAER,qBACE,6LAAC;;0BACC,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;0BACE,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;;4BAAqB,QAAQ,IAAI;4BAAC;4BAAI,QAAQ,KAAK;;uBAA3C,QAAQ,EAAE;;;;;;;;;;;;;;;;AAK7B;GA7BwB;;QACN,gIAAA,CAAA,SAAM;;;KADA","debugId":null}}]
}