{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tomasmaritano/Documents/portfolio/grandvalira-directorio/app/src/app/hooks/useApi.ts"],"sourcesContent":["'use client';\n\nimport { useAuth } from '../context/AuthContext';\n\nexport const useApi = () => {\n  const { token } = useAuth();\n\n  const get = async (url: string) => {\n    const response = await fetch(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    const data = await response.json();\n    return { data, ok: response.ok };\n  };\n\n  const post = async (url: string, body: unknown) => {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(body),\n    });\n\n    const data = await response.json();\n    return { data, ok: response.ok };\n  };\n\n  return { get, post };\n};"],"names":[],"mappings":";;;AAEA;AAFA;;AAIO,MAAM,SAAS;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAO,AAAD;IAExB,MAAM,MAAM,OAAO;QACjB,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;YAClC;QACF;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;YAAE;YAAM,IAAI,SAAS,EAAE;QAAC;IACjC;IAEA,MAAM,OAAO,OAAO,KAAa;QAC/B,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,eAAe,CAAC,OAAO,EAAE,OAAO;YAClC;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;YAAE;YAAM,IAAI,SAAS,EAAE;QAAC;IACjC;IAEA,OAAO;QAAE;QAAK;IAAK;AACrB","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/tomasmaritano/Documents/portfolio/grandvalira-directorio/app/src/app/contacts/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useApi } from '@/app/hooks/useApi';\n\nexport default function ContactsPage() {\n  const { get } = useApi();\n  type Contact = { id: string | number; name: string; email: string };\n\n  const [contacts, setContacts] = useState<Contact[]>([]);\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      const { data, ok } = await get('http://localhost:3000/contacts');\n\n      if (ok) {\n        setContacts(data);\n      } else {\n        console.error('Failed to fetch contacts');\n      }\n    };\n\n    fetchContacts();\n  }, [get]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 py-10 px-6\">\n      <div className=\"max-w-5xl mx-auto\">\n        <h1 className=\"text-4xl font-bold mb-8 text-center text-gray-800\">Contacts</h1>\n\n        <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n          <table className=\"min-w-full leading-normal\">\n            <thead>\n              <tr>\n                <th className=\"px-5 py-3 bg-gray-50 border-b text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                  Name\n                </th>\n                <th className=\"px-5 py-3 bg-gray-50 border-b text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                  Email\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {contacts.map((contact) => (\n                <tr key={contact.id} className=\"hover:bg-gray-50 transition-colors\">\n                  <td className=\"px-5 py-5 border-b text-sm text-gray-700\">\n                    {contact.name}\n                  </td>\n                  <td className=\"px-5 py-5 border-b text-sm text-gray-700\">\n                    {contact.email}\n                  </td>\n                </tr>\n              ))}\n              {contacts.length === 0 && (\n                <tr>\n                  <td\n                    colSpan={2}\n                    className=\"px-5 py-5 border-b text-center text-gray-500\"\n                  >\n                    No contacts found.\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,SAAM,AAAD;IAGrB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAEtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,MAAM,IAAI;YAE/B,IAAI,IAAI;gBACN,YAAY;YACd,OAAO;gBACL,QAAQ,KAAK,CAAC;YAChB;QACF;QAEA;IACF,GAAG;QAAC;KAAI;IAER,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoD;;;;;;8BAElE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAM,WAAU;;0CACf,8OAAC;0CACC,cAAA,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAuG;;;;;;sDAGrH,8OAAC;4CAAG,WAAU;sDAAuG;;;;;;;;;;;;;;;;;0CAKzH,8OAAC;;oCACE,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;4CAAoB,WAAU;;8DAC7B,8OAAC;oDAAG,WAAU;8DACX,QAAQ,IAAI;;;;;;8DAEf,8OAAC;oDAAG,WAAU;8DACX,QAAQ,KAAK;;;;;;;2CALT,QAAQ,EAAE;;;;;oCASpB,SAAS,MAAM,KAAK,mBACnB,8OAAC;kDACC,cAAA,8OAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWnB","debugId":null}}]
}